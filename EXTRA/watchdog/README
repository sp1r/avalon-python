Я предполагаю, что работаю на платформе Linux/Ubuntu.


=== Идея ===

Система 'watchdog' - это система реакций на события. И она естественным образом
делиться на две части: 1) сущности исследующие состояние интересующего нас сервиса
или системы, и при необходимости генерирующие внутренние события, и 2) прослушиватель
событий с заданными правилами реакции на них. Модель основанная на этом принципе
описана в пакете watchdog.basic


=== Демонстрация ===

Запустить ./example.py


=== Структура ===

Мой простой watchdog не нуждается в большом разнообразии функций. Тем не менее
я предпочел ввести некоторую структуру в этот пакет.

watchdog
\_ core        # базовые классы и модель работы

\_ sensors      # классы-генераторы событий
   \_ log.py        # парсеры лог-файлов
   \_ phealth.py    # обработчики информации из /proc/pid/*
   \_ resources.py  # проверка доступности внешних ресурсов

\_ callbacks    # классы-обработчики событий
   \_ simple.py     # джентельментский набор
   \_ exotic.py     # специфичные обработчики

\_ example.py   # пример работы watchdog

fakeservice
\_ service.py   # псевдо-сервис, использующийся в демонстрации

